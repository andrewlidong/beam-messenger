version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: build  # Use the build stage from the Dockerfile for development
    volumes:
      - .:/app:cached  # Mount the current directory to /app for live code changes
      - /app/_build     # Don't sync _build directory
      - /app/deps       # Don't sync deps directory
      - /app/priv/static # Don't sync compiled assets
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - MIX_ENV=dev
      - DATABASE_URL=postgres://postgres:postgres@db:5432/messenger_dev
      - SECRET_KEY_BASE=insecuredevkey12345678901234567890
      - PHX_HOST=localhost
      - PORT=4000
      - LANG=C.UTF-8
    command: >
      bash -c "
        mix deps.get &&
        mix ecto.setup &&
        mix phx.server
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      - messenger-network

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=messenger_dev
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - messenger-network

volumes:
  postgres_data:
    driver: local

networks:
  messenger-network:
    driver: bridge
